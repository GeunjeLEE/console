name: SpaceONE CI dev

on:
  push:
    # recusive wild card
    tags:
      - "**"
  workflow_dispatch:
    inputs:
      tag:
      # can replace github.event.inputs.tag <=> steps.getTag.outputs.tag
        default: 1.2.3

jobs:
  initialize:
    if: github.repository_owner == 'spaceone-dev'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: olegtarasov/get-tag@v2
        id: getTag

      - name: Set version
        run: |
          if [ ${{ steps.getTag.outputs.tag }} ]
          then
            echo "::set-env name=VERSION::${{ steps.getTag.outputs.tag }}"
          else
            echo "::set-env name=VERSION::${{ github.event.inputs.tag }}"
          fi

      - name: Set environment variables
        env:
          # 이 곳에서 환경변수를 통해 설정 관리
          IMAGE_PREFIX: spaceone
          DOCKER_UPLOAD: true
          # LOCATION points the parent directory
          LOCATION_DOCKERFILE: .

        run: |
          cat <<EOF>set_env.sh

          echo "::set-env name=SERVICE::$(cut -d'/' -f2 <<<${{github.repository}})"
          echo "::set-env name=IMAGE_PREFIX::$IMAGE_PREFIX"

          echo "::set-env name=DOCKER_UPLOAD::$DOCKER_UPLOAD"
          echo "::set-env name=LOCATION_DOCKERFILE::$LOCATION_DOCKERFILE"

          # LATEST_TAG true or false
          if [[ $VERSION =~ ^[0-9]\.[0-9]\.[0-9]$ ]];
          then
            echo "::set-env name=LATEST_TAG::true"
          else
            echo "::set-env name=LATEST_TAG::false"
          fi
          EOF

          bash set_env.sh

      - name: save envs
        uses: actions/upload-artifact@v2
        with:
          name: set_env.sh
          path: set_env.sh
      - run: |
          cat set_env.sh

  docker:
    needs: initialize
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Only console use submodule
      - name: Checkout submodules
        uses: srt32/git-actions@v0.0.3
        with:
          args: git submodule update --init --recursive

      - uses: actions/download-artifact@v2
        with:
          name: set_env.sh

      - name: Set environment variables
        run: |
          bash set_env.sh

      - name: "Upload docker - Option a. :latest, :${{ env.VERSION }}"
        if: env.DOCKER_UPLOAD == 'true' && env.LATEST_TAG == 'true'
        run: |
          echo latest
        uses: docker/build-push-action@v1
        with:
          repository: ${{ env.IMAGE_PREFIX }}/${{ env.SERVICE }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: latest,${{ env.VERSION }}

      - name: "Upload docker - Option b. only :${{ env.VERSION }}"
        if: env.DOCKER_UPLOAD == 'true' && env.LATEST_TAG == 'false'
        run: |
          echo no latest
        uses: docker/build-push-action@v1
        with:
          repository: ${{ env.IMAGE_PREFIX }}/${{ env.SERVICE }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tags: ${{ env.VERSION }}

      - name: Slack
        if: always()
        uses: 8398a7/action-slack@v3.2.0
        with:
          status: ${{job.status}}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
          author_name: Github Action Slack
        env:
          SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}